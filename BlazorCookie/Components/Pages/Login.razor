@page "/login"
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService
@attribute [AllowAnonymous]
@* rendermodeは Static Server 固定 *@
<h3>Login</h3>

<div class="p-5">
    <div class="form-group">
        <p>管理者権限でログイン     admin@test.com / test</p>
        <p>ユーザー権限でログイン   user@test.com / test</p>
    </div>
    <div class="col-md-4">
        <EditForm Model="@loginUser" FormName="login-form" OnValidSubmit="LoginAsync">
            <div class="mb-3">
                <div class="form-group">
                    <label for="username">ユーザー名</label>
                    <InputText id="username" @bind-Value="loginUser.UserName" class="form-control"></InputText>
                </div>
                <div class="form-group">
                    <label for="password">パスワード</label>
                    <InputText id="password" @bind-Value="loginUser.Password" class="form-control" type="password"></InputText>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">ログイン</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel loginUser { get; set; } = new();

    private async Task LoginAsync()
    {
        var success = await AuthService.LoginAsync(loginUser);
        if (success)
        {
            NavigationManager.NavigateTo("", forceLoad: true);
        }
    }

}